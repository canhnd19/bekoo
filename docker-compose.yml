#version: '3.8'

services:
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: root
      MYSQL_ROOT_PASSWORD: 19110919

    ports:
      - '3307:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    command: ['redis-server', '--requirepass', 'root_admin']
    environment:
      REDIS_PASSWORD: root_admin
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - cluster.name=docker-cluster
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'

  booking-care-command:
    platform: linux/amd64
    image: presidentquyen/booking-care-command:v1.0.0
    container_name: booking-care-command
    depends_on:
      - mysql
      - redis
      - kafka
    restart: on-failure
    ports:
      - '8083:8080'
    environment:
      SPRING_URL: http://localhost:8083
      SPRING_KAFKA_PORT: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/booking_care_command?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 19110919
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root_admin
      WEB_URL: localhost:8082/home
      AI_URL: http://bekoo-ai:5501/ask

  booking-care-query:
    platform: linux/amd64
    image: presidentquyen/booking-care-query:v1.0.0
    container_name: booking-care-query
    depends_on:
      - kafka
      - redis
    restart: on-failure
    ports:
      - '8084:8081'
    environment:
      SPRING_URL: http://localhost:8084
      SPRING_ELASTICSEARCH_ENDPOINT: elasticsearch:9200
      SPRING_KAFKA_PORT: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root_admin
  bekoo-ai:
    platform: linux/amd64
    image: datj114/bekoo-ai:v2.0.0
    container_name: bekoo-ai
    ports:
      - '5501:5501'

volumes:
  mysql_data:
  redis_data:
  kafka_data:
  es_data:
